@model WebAppEF.Entities.Product

@{
    ViewBag.Title = "Edit";
}

<div class="row">
    <div class="col-lg-6 mx-auto">
        <div class="card">
            <div class="card-header text-bg-light">
                <h2>Edit Product:</h2>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)
                    @Html.HiddenFor(m => m.CreateDate)
                    @Html.Hidden("oldFeaturedImage",Model.FeaturedImage)

                    <div class="row g-3">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="col-12">
                            <div class="form-floating">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = " " } })
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-floating">
                                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-floating">
                                @Html.DropDownList("BrandId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.LabelFor(model => model.BrandId, "Brand", htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="form-floating">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @placeholder = " " } })
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="form-floating">
                                @Html.EditorFor(model => model.TaxRatio, new { htmlAttributes = new { @class = "form-control", @placeholder = " " } })
                                @Html.LabelFor(model => model.TaxRatio, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.TaxRatio, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="form-floating">
                                @Html.EditorFor(model => model.DiscountRatio, new { htmlAttributes = new { @class = "form-control", @placeholder = " " } })
                                @Html.LabelFor(model => model.DiscountRatio, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.DiscountRatio, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="form-check form-switch">
                                @Html.EditorFor(model => model.Discounted, new { htmlAttributes = new { @class = "form-check-input" } })
                                @Html.LabelFor(model => model.Discounted, htmlAttributes: new { @class = "form-check-label" })
                                @Html.ValidationMessageFor(model => model.Discounted, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-floating">
                                @Html.TextAreaFor(model => model.Detail, new { @class = "form-control", @placeholder = " " })
                                @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-6 offset-3">
                            @if (Model.FeaturedImage.StartsWith("http"))
                            {
                                <img src="@Model.FeaturedImage" class="img-thumbnail" />
                            }
                            else
                            {
                                <img src="/images/@Model.FeaturedImage" class="img-thumbnail" />
                            }
                        </div>
                        <div class="col-12">
                            <div class="input-group">
                                @Html.LabelFor(model => model.FeaturedImage, htmlAttributes: new { @class = "input-group-text" })
                                @Html.EditorFor(model => model.FeaturedImage, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                                @Html.ValidationMessageFor(model => model.FeaturedImage, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-12 d-flex justify-content-between">
                            @Html.ActionLink("Back to List", "Index", "Products", new { }, new { @class = "btn btn-outline-dark" })
                            <input type="submit" value="Edit" class="btn btn-outline-success" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>